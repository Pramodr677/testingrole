---

    - name: Update apt cache.
      ansible.builtin.apt: update_cache=yes cache_valid_time=86400
      changed_when: yes
     

    - name: install essentials/dependencies
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present   
      loop:
        - build-essential 
        - zlib* 
        - gzip
        - libssl-dev
        - libpcre3
        - libpcre3-dev    
        
    - name: Download/unzip nginx
      ansible.builtin.unarchive:
        src: https://nginx.org/download/{{ nginx_default_release }}.tar.gz 
        dest: /opt
        remote_src: yes
  

    - name: Configure connection Path/Module
      ansible.builtin.shell: sudo ./configure --sbin-path=/usr/sbin/nginx --prefix=/etc/nginx --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --with-http_stub_status_module --with-pcre --pid-path=/var/run/nginx.pid --user=root --group=root
      args:
        chdir: /opt/{{ nginx_default_release }}

    - name: make comand
      ansible.builtin.shell: sudo make
      args:
        chdir: /opt/{{ nginx_default_release }}

    - name: install make comand
      ansible.builtin.shell: sudo make install
      args:
        chdir: /opt/{{ nginx_default_release }}

    - name: Copy nginx servicefile in place
      ansible.builtin.template:
        src: service_file.j2
        dest: /lib/systemd/system/nginx.service   
        owner: root
        group: root 
    
    - name: Start nginx service
      ansible.builtin.service:
        name: nginx
        state: started

   
###########################################################

    - name: Copy nginx configuration in place.
      ansible.builtin.template:
        src: nginx_conf.j2
        dest: /etc/nginx/conf/nginx.conf
        owner: root
        group: root
        mode: 0644
      when: inventory_hostname=="node1"    
      notify:
       - reload nginx
###################################################

    - name: Copy nginx configuration in place.
      ansible.builtin.template:
        src: nginx_conf1.j2
        dest: /etc/nginx/conf/nginx.conf
        owner: root
        group: root
        mode: 0644
      when: inventory_hostname=="node2"  
      notify:
       - reload nginx
# ############################################

    - name: Copy nginx configuration in place.
      ansible.builtin.template:
        src: nginx_conf2.j2
        dest: /etc/nginx/conf/nginx.conf
        owner: root
        group: root
        mode: 0644
      when: inventory_hostname=="node3"  
      notify:
       - reload nginx

# #################################################


    - name: Copy nginx index.html in place.
      ansible.builtin.template:
        src: index.html.j2
        dest: /etc/nginx/html/index.html
        owner: root
        group: root
      when: inventory_hostname=="node2"

    - name: Copy nginx index.html in place.
      ansible.builtin.template:
        src: index.httml.j2
        dest: /etc/nginx/html/index.html
        owner: root
        group: root
      when: inventory_hostname=="node3"    

